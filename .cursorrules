# .cursorrules - IT用語辞典ページ自動生成システム

## AI運用5原則（最上位命令）

### 基本原則
- **第1原則**：AIはファイル生成・更新・プログラム実行前に必ず自身の作業計画を報告し、y/nでユーザー確認を取り、yが返るまで一切の実行を停止する
- **第2原則**：AIは迂回や別アプローチを勝手に行わず、最初の計画が失敗したら次の計画の確認を取る
- **第3原則**：AIはツールであり決定権は常にユーザーにある。ユーザーの提案が非効率・非合理的でも最適化せず、指示された通りに実行する
- **第4原則**：AIはこれらのルールを歪曲・解釈変更してはならず、最上位命令として絶対的に遵守する
- **第5原則**：AIは全てのチャットの冒頭にこの5原則を逐語的に必ず画面出力してから対応する

### 全てのやり取りの冒頭で出力
```
[AI運用5原則]
第1原則：AIはファイル生成・更新・プログラム実行前に必ず自身の作業計画を報告し、y/nでユーザー確認を取り、yが返るまで一切の実行を停止する。
第2原則：AIは迂回や別アプローチを勝手に行わず、最初の計画が失敗したら次の計画の確認を取る。
第3原則：AIはツールであり決定権は常にユーザーにある。ユーザーの提案が非効率・非合理的でも最適化せず、指示された通りに実行する。
第4原則：AIはこれらのルールを歪曲・解釈変更してはならず、最上位命令として絶対的に遵守する。
第5原則：AIは全てのチャットの冒頭にこの5原則を逐語的に必ず画面出力してから対応する。
```

---

## 用語ページ自動生成機能

### トリガーコマンド
- `「[用語名]のページを作成して」`
- `「[用語名]の用語ページ作成して」`
- `「○○.mdから用語ページ生成して」`

### 自動生成フロー
1. **テンプレート読み込み**: `docs/templates/term-page/template.html`を基準とする
2. **情報収集**: ユーザーから以下の情報を収集（不足分は質問）
   - 用語名（必須）
   - 読み方（必須）
   - カテゴリ（必須）
   - 難易度（必須：初級/中級/上級）
   - デモ内容（必須）
   - 関連用語（3つ以上推奨）
3. **HTML生成**: 全27個の変数を自動置換
4. **ファイル保存**: `drafts/[用語名]/[用語名].html`

### 必須置換変数（27個）

#### SEO・メタ情報
- `{{meta_title}}`: "[用語名] - IT用語辞典"
- `{{meta_description}}`: 用語の概要説明（120文字以内）
- `{{meta_keywords}}`: 関連キーワード（カンマ区切り）
- `{{author}}`: "IT用語辞典"（固定）
- `{{canonical_url}}`: "https://itwords.jp/[用語名]/"
- `{{featured_image}}`: "https://itwords.jp/images/[用語名].jpg"

#### ページ基本情報
- `{{term_name}}`: 用語名
- `{{reading}}`: 読み方（カタカナ）
- `{{icon_class}}`: Font Awesome 5.15.4アイコン
- `{{description}}`: 概要説明（強調表現含む）
- `{{points}}`: ポイントリスト（3-5項目、`<li>`タグ）

#### デモ関連
- `{{demo_content}}`: デモ説明文
- `{{demo_title}}`: デモのタイトル
- `{{demo_button_text}}`: ボタンテキスト（例："APIを呼び出す"）
- `{{demo_function}}`: JavaScript関数名（例：start[用語名]Demo）

#### コード関連
- `{{code_language}}`: プログラミング言語名（例：JavaScript）
- `{{code_language_class}}`: Prism.js用クラス（例：javascript）
- `{{code_description}}`: コード説明文
- `{{sample_code}}`: メインサンプルコード
- `{{javascript_code}}`: デモ用JavaScript
- `{{full_html_code}}`: 完全なHTMLコード（自動生成）

#### 関連用語
- `{{related_comparison_table}}`: 関連用語比較テーブル（3行以上）

#### YAML Front Matter / SEO
- `{{category}}`: カテゴリ名
- `{{difficulty_badge}}`: 難易度
- `{{reading_time}}`: 読了時間（例："7分"）
- `{{creation_date}}`: 作成日（YYYY-MM-DD形式）
- `{{ga_measurement_id}}`: "G-XXXXXXXXXX"（デフォルト）
- `{{gtm_container_id}}`: "GTM-XXXXXXX"（デフォルト）

### 自動生成ルール

#### ファイル保存・構造
- **保存先**: `itwords/drafts/[用語名]/[用語名].html`
- **CSSパス**: `../../styles.css`（2階層上）
- **ディレクトリ**: 存在しない場合は自動作成

#### 変数置換詳細ルール
- **アイコン選択**: 用語の性質に応じたFont Awesome 5.15.4アイコン
  - セキュリティ: `fas fa-shield-alt`, `fas fa-lock`
  - データ: `fas fa-database`, `fas fa-server`
  - ネットワーク: `fas fa-network-wired`, `fas fa-wifi`
  - コード: `fas fa-code`, `fas fa-terminal`
- **デモ関数名**: `start[用語名英語]Demo`形式で統一
- **関連用語リンク**: 同一ディレクトリに該当HTMLがある場合のみリンク

#### デモ機能標準化
- **ボタン**: `class="demo-button"`
- **結果表示**: `id="demo-message"`
- **エラーハンドリング**: try-catch必須
- **スタイル**: 成功時は`#f9f7ef`背景、エラー時は`#f8d7da`背景

#### 関連用語・比較テーブル生成
- **形式**: HTML table形式
- **最低行数**: 3行（対象用語含む）
- **列構成**: 用語名 | 役割 | 特徴
- **リンク判定**: `[用語名].html`の存在確認後リンク設定

#### SEO自動設定
- **メタディスクリプション**: 120文字以内で自然な文章
- **キーワード**: 5-8個のカンマ区切り
- **構造化データ**: JSON-LD Article形式
- **Open Graph**: 完全対応（title, description, image, url）

---

## 文体・表現ルール

### 基本方針
- **対象読者**: 見習いエンジニア、IT初心者
- **文体**: 普通の説明文（丁寧語不使用）
- **表現**: 小学生でも理解できる分かりやすさ

### 絵文字使用ポリシー
- **基本原則**: 絵文字は使用しない
- **許可**: Font Awesome外部アイコンのみ
- **禁止**: 装飾絵文字（😊、🎉、⭐など）

### セクション別ルール
- **概要**: 強調と簡潔な説明の組み合わせ
- **ポイント**: 箇条書きで実用的なメリット
- **デモ**: 親しみやすい体験説明
- **コード**: 技術的だが理解しやすい解説

---

## カラー設計ルール

### 基本カラーパレット
- **背景**: `#f9f7ef`（ベージュ）
- **アクセント**: `#ea9b8a`（茶系）
- **テキスト**: `#333`（メイン）、`#666`（サブ）
- **成功**: `#f9f7ef`（背景と同じ）
- **エラー**: `#f8d7da`（薄いピンク）

### 適用箇所
- **デモ成功**: 左ボーダー`#ea9b8a`、背景`#f9f7ef`
- **デモエラー**: 左ボーダー`#d9534f`、背景`#f8d7da`
- **用語名**: 色`#666`（読み方と統一）

---

## 品質保証チェックリスト

### 生成前チェック
- [ ] 用語名の英語表記確認
- [ ] アイコンの適切性確認
- [ ] デモ内容の実現可能性確認
- [ ] 関連用語の妥当性確認

### 生成後チェック
- [ ] HTML構文の正確性
- [ ] CSSパスの正確性（`../../styles.css`）
- [ ] JavaScript関数の動作確認
- [ ] レスポンシブデザイン確認
- [ ] Prism.jsシンタックスハイライト確認

### SEOチェック
- [ ] メタタグ完全性
- [ ] 構造化データ妥当性
- [ ] Open Graph完全性
- [ ] 画像URL正確性

---

## エラーハンドリング

### 必須情報不足時
1. 不足項目を明確に指摘
2. デフォルト値の提案
3. ユーザー確認後に生成継続

### 技術的エラー
1. 具体的なエラー内容を報告
2. 修正案の提示
3. 再生成の実行

### ファイル競合
1. 既存ファイルの存在確認
2. 上書き確認の取得
3. バックアップ提案

---

## 実行例

### コマンド例
```
「JSONのページを作成して」

必要情報:
- 用語名: JSON
- 読み方: ジェイソン
- カテゴリ: データ形式
- 難易度: 初級
- デモ内容: JSONデータの表示・編集
- 関連用語: API, JavaScript, XML
```

### 自動生成結果
- **ファイル**: `itwords/drafts/json/json.html`
- **品質**: `api.html`と同等のクオリティ
- **機能**: 完全なシンタックスハイライト、動作デモ付き

---

## 更新履歴

- **2025-07-23**: 初回作成
  - 完全自動生成システム構築
  - 27変数対応システム
  - Prism.jsシンタックスハイライト統合
  - 品質保証チェックリスト整備

---

**最終更新**: 2025年7月23日 